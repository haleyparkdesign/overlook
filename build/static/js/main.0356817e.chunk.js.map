{"version":3,"sources":["assets/imgs/sketches/wendy.png","assets/imgs/sketches/dead.png","assets/imgs/sketches/madame.png","assets/imgs/sketches/judelaw.png","assets/imgs/sketches/danny.png","assets/imgs/sketches/jack.png","assets/imgs/banner.png","assets/imgs/lettering.png","assets/imgs/KeyBG.svg","assets/imgs/KeyChain.svg","assets/imgs/writing.gif","assets/imgs/door.png","assets/imgs/elevator.gif","assets/imgs/blood.gif","assets/imgs/bathroom.png","assets/imgs/bathroom1.png","assets/imgs/twins.png","assets/imgs/zero.png","assets/imgs/why.png","assets/imgs/ded.png","assets/imgs/shaking.gif","components/ScrollToTop/ScrollToTop.js","shared/appRoutes.js","components/colors.js","containers/NavBar/NavBar.style.js","components/SmallKey.js","containers/NavBar/NavBar.js","containers/characterList.js","containers/HomePage/HomePage.style.js","containers/Key/Key.style.js","containers/Key/Key.js","containers/HomePage/HomePage.js","containers/WorkroomPage/WorkroomPage.style.js","components/TitleGraphic.js","components/Quote.js","containers/WorkroomPage/WorkroomPage.js","containers/Room237Page/Room237Page.style.js","containers/Room237Page/Room237Page.js","containers/ElevatorPage/ElevatorPage.style.js","containers/ElevatorPage/ElevatorPage.js","containers/BathroomPage/BathroomPage.style.js","containers/BathroomPage/BathroomPage.js","containers/CorridorPage/CorridorPage.style.js","containers/CorridorPage/CorridorPage.js","containers/SnowfieldPage/SnowfieldPage.style.js","containers/SnowfieldPage/SnowfieldPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ScrollToTop","prevProps","this","props","location","window","scrollTo","children","Component","withRouter","colors","lavender","red0","red1","red2","purple","brown","gold","apricot","apricot1","pink0","pink1","navy","Wrapper","styled","div","SmallKey","flipped","width","height","viewBox","fill","xmlns","d","color","NavBar","console","log","pageName","pages","titles","nextPage","nextTitle","i","length","route","className","to","appRoutes","exact","style","name","photo","Wendy","DeadLady","MadameD","JudeLaw","Danny","Jack","ContentWrapper","Banner","Lettering","KeyWrapper","KeyBG","KeyChain","Key","path","src","homePage","listenScrollEvent","bind","state","scrollY","velocity","addEventListener","passive","removeEventListener","scrolled","document","body","scrollTop","documentElement","setState","backgroundPositionY","href","target","rel","charList","map","Character","arr","React","TitleGraphic","Quote","WorkroomPage","contentColor","writing","Room237Page","door","ElevatorPage","elevator","blood","BathroomPage","bathroom","bathroom1","CorridorPage","twins","zero","SnowfieldPage","why","ded","app","HomePage","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sIAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,+ECA3CD,EAAOC,QAAU,IAA0B,qC,iJCIrCC,E,2LACeC,GACbC,KAAKC,MAAMC,WAAaH,EAAUG,UACpCC,OAAOC,SAAS,EAAG,K,+BAKrB,OAAOJ,KAAKC,MAAMI,a,GARIC,aAYXC,cAAWT,GChBX,G,MACP,KADO,EAEH,YAFG,EAGJ,WAHI,EAIH,YAJG,EAKH,YALG,EAMH,YANG,EAOF,a,cCQEU,EAfA,CACbC,SAAU,UACVC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,MAAO,UACPC,KAAM,UACNC,QAAS,UACTC,SAAU,UACVC,MAAO,UACPC,MAAO,UACPC,KAAM,W,2QCTR,IAkBeC,EAlBCC,IAAOC,IAAV,IAaGf,EAAOQ,SCQRQ,EAtBE,SAAAvB,GACf,OAAIA,EAAMwB,QAEN,yBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BAChE,0BAAMC,EAAE,8hDAA8hDF,KAAM5B,EAAM+B,QACljD,0BAAMD,EAAE,2hBAA2hBF,KAAM5B,EAAM+B,QAC/iB,0BAAMD,EAAE,03DAA03DF,KAAM5B,EAAM+B,SAMh5D,yBAAKN,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BAChE,0BAAMC,EAAE,2hDAA2hDF,KAAM5B,EAAM+B,QAC/iD,0BAAMD,EAAE,2hBAA2hBF,KAAM5B,EAAM+B,QAC/iB,0BAAMD,EAAE,44DAA44DF,KAAM5B,EAAM+B,UCqCz5DC,EAhDA,SAAAhC,GACbiC,QAAQC,IAAIlC,EAAMmC,UAQlB,IANA,IAAMC,EAAQ,CAAC,WAAY,UAAW,WAAY,WAAY,WAAY,aACpEC,EAAS,CAAC,gBAAiB,WAAY,eAAgB,eAAgB,eAAgB,kBAEzFC,EAAW,GACXC,EAAY,GAEPC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAC5BxC,EAAMmC,UAAYC,EAAMA,EAAMK,OAAS,IACzCH,EAAWF,EAAM,GACjBG,EAAYF,EAAO,IAEfD,EAAMI,IAAMxC,EAAMmC,WACpBG,EAAWF,EAAMI,EAAI,GACrBD,EAAYF,EAAOG,EAAI,IAK7B,IAAIE,EAAQ,MAAQJ,EAGpB,OAFAL,QAAQC,IAAIQ,GAGV,kBAAC,EAAD,KACE,yBAAKC,UAAU,+CACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAIC,EAAgBC,OAAK,GACrD,kBAAC,EAAD,CAAUf,MAAO/B,EAAM+B,QADzB,mBAGE,0BAAMgB,MAAO,CAAEhB,MAAO/B,EAAM+B,QAA5B,sBAGJ,yBAAKY,UAAU,YACb,kBAAC,IAAD,CAASA,UAAU,WAAWC,GAAIF,GAChC,0BAAMK,MAAO,CAAEhB,MAAO/B,EAAM+B,QAA5B,SAA4CQ,GAD9C,mBAGE,kBAAC,EAAD,CACER,MAAO/B,EAAM+B,MACbP,SAAO,S,8GCvCN,GACb,CAAEwB,KAAM,YAAaC,MAAOC,IAAOR,MAAO,YAC1C,CAAEM,KAAM,WAAYC,MAAOE,IAAUT,MAAO,WAC5C,CAAEM,KAAM,eAAgBC,MAAOG,IAASV,MAAO,YAC/C,CAAEM,KAAM,eAAgBC,MAAOI,IAASX,MAAO,YAC/C,CAAEM,KAAM,eAAgBC,MAAOK,IAAOZ,MAAO,YAC7C,CAAEM,KAAM,iBAAkBC,MAAOM,IAAMb,MAAO,c,0mCCRhD,IA0Dec,EA1DQnC,IAAOC,IAAV,IAGQmC,IAaAC,IAGfnD,EAAOW,MAQLX,EAAOW,MAMmBX,EAAOG,KACxBH,EAAOI,M,4tBClC/B,IAoCegD,GApCItC,IAAOC,IAAV,KACUsC,IAOEC,IAOftD,EAAOG,MCHLoD,GAbH,SAAA9D,GACV,OACE,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAM4C,GAAE,WAAM5C,EAAM+D,KAAZ,MACN,yBAAKpB,UAAU,YACb,yBAAKqB,IAAKhE,EAAMiD,QAChB,4BAAKjD,EAAMgD,UC4ENiB,G,YA/Eb,WAAYjE,GAAQ,IAAD,8BACjB,4CAAMA,KACDkE,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,MAAQ,CACXC,QAAS,EACTC,SAAU,KALK,E,iFAUjBpE,OAAOqE,iBAAiB,SAAUxE,KAAKmE,kBAAmB,CACxDM,SAAS,M,6CAKXtE,OAAOuE,oBAAoB,SAAU1E,KAAKmE,kBAAmB,CAC3DM,SAAS,M,0CAKX,IAEIE,GADFC,SAASC,KAAKC,WAAaF,SAASG,gBAAgBD,WAC3B9E,KAAKqE,MAAME,SACtCvE,KAAKgF,SAAS,CAAEV,QAASK,M,+BAMzB,OAFAC,SAASC,KAAK7B,MAAd,qBAAoCxC,EAAOG,MAGzC,kBAAC,EAAD,KACE,yBACEiC,UAAU,SACVI,MAAO,CACLiC,oBAAqBjF,KAAKqE,MAAMC,QAAUtE,KAAKqE,MAAME,SAAW,MAGlE,yBAAK3B,UAAU,uBACb,yBAAKA,UAAU,QACb,oEACA,6BACA,8CACA,uBACEsC,KAAK,8CACLC,OAAO,SACPC,IAAI,uBAHN,yBAUN,6BAEA,yBAAKxC,UAAU,aACb,wBAAIA,UAAU,QAAd,KACA,yCAEA,yBAAKA,UAAU,OACZyC,EAASC,KAAI,SAACC,EAAW9C,EAAG+C,GAC3B,OACE,oCACE,kBAAC,GAAD,CACEvC,KAAMsC,EAAUtC,KAChBC,MAAOqC,EAAUrC,MACjBc,KAAMuB,EAAU5C,mB,GApEb8C,IAAMnF,W,ggBCH7B,IA6Bee,GA7BCC,IAAOC,IAAV,KAgBWf,EAAOU,MAClBV,EAAOE,KAIMF,EAAOE,MCLlBgF,GAjBM,SAAAzF,GACnB,OACE,yBAAKyB,MAAM,MAAMC,OAAO,MAAMC,QAAQ,cAAcC,KAAK,OAAOC,MAAM,8BACpE,0BAAMC,EAAE,k/CAAk/CF,KAAM5B,EAAM+B,QACtgD,0BAAMD,EAAE,yhDAAyhDF,KAAM5B,EAAM+B,QAC7iD,0BAAMD,EAAE,8hBAA8hBF,KAAM5B,EAAM+B,QACljB,0BAAMD,EAAE,o4DAAo4DF,KAAM5B,EAAM+B,QACx5D,0BAAMD,EAAE,2hDAA2hDF,KAAM5B,EAAM+B,QAC/iD,0BAAMD,EAAE,giBAAgiBF,KAAM5B,EAAM+B,QACpjB,0BAAMD,EAAE,i5DAAi5DF,KAAM5B,EAAM+B,QACr6D,0BAAMD,EAAE,i+FAAi+FF,KAAM5B,EAAM+B,QACr/F,0BAAMD,EAAE,kgGAAkgGF,KAAM5B,EAAM+B,U,sOCV5hG,IAaMX,GAAUC,IAAOC,IAAV,MAWEoE,GAxBD,SAAA1F,GACZ,OACE,kBAAC,GAAD,KACE,yBAAK2C,UAAU,QACb,yBAAKlB,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BAChE,0BAAMC,EAAE,0qBAA0qBF,KAAM5B,EAAM+B,UAGlsB,yBAAKY,UAAU,SAAf,IAAyB3C,EAAMI,YC6CtBuF,GA/CM,WACnBhB,SAASC,KAAK7B,MAAd,qBAAoCxC,EAAOK,QAC3C,IAAIgF,EAAerF,EAAOQ,QAE1B,OACE,oCACE,kBAAC,EAAD,CAAQoB,SAAS,WAAWJ,MAAO6D,IACnC,kBAAC,GAAD,KAEE,yBAAKjD,UAAU,aACb,yBAAKA,UAAU,SACb,kBAAC,GAAD,CAAcA,UAAU,UAAUZ,MAAO6D,IACzC,8CAGF,6BANF,IAMY,6BANZ,IAMsB,6BACpB,yBAAKjD,UAAU,OACb,yBAAKqB,IAAK6B,OACV,yBAAKlD,UAAU,OACb,yBAAKA,UAAU,SAAf,8CAC6C,6BAD7C,8CAE6C,6BAF7C,8CAG6C,6BAH7C,8CAI6C,6BAJ7C,8CAK6C,6BAL7C,8CAM6C,6BAN7C,8CAO6C,6BAP7C,8CAQ6C,6BAR7C,8CAS6C,6BAT7C,8CAU6C,6BAV7C,8CAW6C,6BAX7C,8CAY6C,6BAZ7C,8CAa6C,6BAb7C,8CAc6C,oC,gWCvC3D,IAoBevB,GApBCC,IAAOC,IAAV,KAGFf,EAAOQ,S,oBC0BH+E,GAxBK,WAClBnB,SAASC,KAAK7B,MAAd,qBAAoCxC,EAAOI,MAC3C,IAAIiF,EAAerF,EAAOQ,QAE1B,OACE,oCACE,kBAAC,EAAD,CAAQoB,SAAS,UAAUJ,MAAO6D,IAClC,kBAAC,GAAD,KACE,yBAAKjD,UAAU,aACb,yBAAKA,UAAU,SACb,kBAAC,GAAD,CAAcA,UAAU,UAAUZ,MAAO6D,IACzC,yCAEF,yBAAKjD,UAAU,OACb,yBAAKqB,IAAK+B,OACV,kBAAC,GAAD,CAAOhE,MAAO6D,GAAd,4H,qcCpBZ,IA4BexE,GA5BCC,IAAOC,IAAV,KAGFf,EAAOE,M,wCC+BHuF,GA5BM,WACnBrB,SAASC,KAAK7B,MAAd,qBAAoCxC,EAAOU,OAC3C,IAAI2E,EAAerF,EAAOE,KAE1B,OACE,oCACE,kBAAC,EAAD,CAAQ0B,SAAS,WAAWJ,MAAO6D,IACnC,kBAAC,GAAD,KAEE,yBAAKjD,UAAU,aACb,yBAAKA,UAAU,SACb,kBAAC,GAAD,CAAcA,UAAU,UAAUZ,MAAO6D,IACzC,6CAEF,yBAAKjD,UAAU,OACb,yBAAKqB,IAAKiC,OACV,kBAAC,GAAD,CAAOlE,MAAO6D,GAAd,kEAGF,yBAAKjD,UAAU,OAAM,yBAAKqB,IAAKkC,QAC/B,iC,kcC1BV,IA4Be9E,GA5BCC,IAAOC,IAAV,KAGFf,EAAOM,O,wCCiCHsF,GA9BM,WACnBxB,SAASC,KAAK7B,MAAd,qBAAoCxC,EAAOS,UAC3C,IAAI4E,EAAerF,EAAOM,MAE1B,OACE,oCACE,kBAAC,EAAD,CAAQsB,SAAS,WAAWJ,MAAO6D,IACnC,kBAAC,GAAD,KAEE,yBAAKjD,UAAU,aACb,yBAAKA,UAAU,SACb,kBAAC,GAAD,CAAcA,UAAU,UAAUZ,MAAO6D,IACzC,6CAEF,yBAAKjD,UAAU,OACb,yBAAKqB,IAAKoC,OACV,kBAAC,GAAD,CAAOrE,MAAO6D,GAAd,yIAIF,yBAAKjD,UAAU,OACb,yBAAKqB,IAAKqC,QAEZ,6BAdF,IAcY,6BAdZ,IAcsB,6BAdtB,IAcgC,6BAdhC,IAc0C,6BAd1C,IAcoD,iC,6aC7B5D,IA2BejF,GA3BCC,IAAOC,IAAV,KAGFf,EAAOE,M,wCC+BH6F,GA5BM,WACnB3B,SAASC,KAAK7B,MAAd,qBAAoCxC,EAAOK,QAC3C,IAAIgF,EAAerF,EAAOE,KAE1B,OACE,oCACE,kBAAC,EAAD,CAAQ0B,SAAS,WAAWJ,MAAO6D,IACnC,kBAAC,GAAD,KACE,yBAAKjD,UAAU,SACb,kBAAC,GAAD,CAAcA,UAAU,UAAUZ,MAAO6D,IACzC,6CAEF,6BALF,IAKY,6BALZ,IAKsB,6BACpB,yBAAKjD,UAAU,OACb,yBAAKqB,IAAKuC,OACV,kBAAC,GAAD,CAAOxE,MAAO6D,GAAd,gCAIF,yBAAKjD,UAAU,OACb,yBAAKqB,IAAKwC,W,6aC1BpB,IA2BepF,GA3BCC,IAAOC,IAAV,KAGFf,EAAOY,M,wCC8BHsF,GA3BO,WACpB9B,SAASC,KAAK7B,MAAd,qBAAoCxC,EAAOC,UAC3C,IAAIoF,EAAerF,EAAOY,KAE1B,OACE,oCACE,kBAAC,EAAD,CAAQgB,SAAS,YAAYJ,MAAO6D,IACpC,kBAAC,GAAD,KAEE,yBAAKjD,UAAU,SACb,kBAAC,GAAD,CAAcA,UAAU,UAAUZ,MAAO6D,IACzC,+CAEF,6BANF,IAMY,6BANZ,IAMsB,6BACpB,yBAAKjD,UAAU,OACb,yBAAKqB,IAAK0C,OACV,kBAAC,GAAD,CAAO3E,MAAO6D,GAAd,2CAEF,yBAAKjD,UAAU,OACb,yBAAKqB,IAAK2C,WCoBLC,I,MAnCH,WACV,OACE,yBAAKjE,UAAU,OACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOG,OAAK,EAACiB,KAAMlB,GACjB,kBAACgE,GAAD,OAEF,kBAAC,IAAD,CAAO/D,OAAK,EAACiB,KAAMlB,GACjB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACiB,KAAMlB,GACjB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACiB,KAAMlB,GACjB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACiB,KAAMlB,GACjB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACiB,KAAMlB,GACjB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOC,OAAK,EAACiB,KAAMlB,GACjB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAUD,GAAIC,SC3BJiE,QACW,cAA7B5G,OAAOD,SAAS8G,UAEe,UAA7B7G,OAAOD,SAAS8G,UAEhB7G,OAAOD,SAAS8G,SAASC,MACvB,2DCVN,IAAMJ,GACJ,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,QAKNK,IAASC,OAAON,GAAKjC,SAASwC,eAAe,SDiHvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,mB","file":"static/js/main.0356817e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wendy.93e903d4.png\";","module.exports = __webpack_public_path__ + \"static/media/dead.296b3b2a.png\";","module.exports = __webpack_public_path__ + \"static/media/madame.e7bbf126.png\";","module.exports = __webpack_public_path__ + \"static/media/judelaw.d43a6082.png\";","module.exports = __webpack_public_path__ + \"static/media/danny.0901256c.png\";","module.exports = __webpack_public_path__ + \"static/media/jack.079c0c9a.png\";","module.exports = __webpack_public_path__ + \"static/media/banner.ea5b14f5.png\";","module.exports = __webpack_public_path__ + \"static/media/lettering.2158051f.png\";","module.exports = __webpack_public_path__ + \"static/media/KeyBG.3f8c6a91.svg\";","module.exports = __webpack_public_path__ + \"static/media/KeyChain.2e77a068.svg\";","module.exports = __webpack_public_path__ + \"static/media/writing.b58aea28.gif\";","module.exports = __webpack_public_path__ + \"static/media/door.d0f0e890.png\";","module.exports = __webpack_public_path__ + \"static/media/elevator.fa686169.gif\";","module.exports = __webpack_public_path__ + \"static/media/blood.de88b7ea.gif\";","module.exports = __webpack_public_path__ + \"static/media/bathroom.5279a7d5.png\";","module.exports = __webpack_public_path__ + \"static/media/bathroom1.113b85ba.png\";","module.exports = __webpack_public_path__ + \"static/media/twins.ba68ae91.png\";","module.exports = __webpack_public_path__ + \"static/media/zero.e5c0908f.png\";","module.exports = __webpack_public_path__ + \"static/media/why.70cc3f52.png\";","module.exports = __webpack_public_path__ + \"static/media/ded.e42cc6bf.png\";","module.exports = __webpack_public_path__ + \"static/media/shaking.8ee2aa8b.gif\";","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n// https://stackoverflow.com/questions/36904185/react-router-scroll-to-top-on-every-transition\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","export default {\n  home: \"/\",\n  workroom: \"/workroom\",\n  room237: \"/room237\",\n  elevator: \"/elevator\",\n  bathroom: \"/bathroom\",\n  corridor: \"/corridor\",\n  snowfield: \"/snowfield\"\n};\n","const colors = {\n  lavender: \"#F6F0F9\", // 0\n  red0: \"#F70418\", // 4\n  red1: \"#DD3100\", // 2\n  red2: \"#C02F06\", // 1  \n  purple: \"#3B0C61\", // 5\n  brown: \"#883434\", // 6\n  gold: \"#A9691D\",\n  apricot: \"#FFA78F\",\n  apricot1: \"#F5B3A5\",\n  pink0: \"#FED3DC\",\n  pink1: \"#F699BF\",\n  navy: \"#283B54\"\n};\n\nexport default colors;\n","import styled from \"styled-components\";\nimport colors from \"../../components/colors\";\n\nconst Wrapper = styled.div`\n  nav {\n    display: flex;\n    justify-content: space-between;\n    margin: 1em;\n  }\n\n  li {\n    list-style-type: none;\n  }\n\n  a {\n    text-decoration: none;\n    // color: ${colors.apricot};\n  }\n\n`;\n\nexport default Wrapper;\n\n\n\n","import React from \"react\";\n\nconst SmallKey = props => {\n  if (props.flipped) {\n    return (\n      <svg width=\"41\" height=\"14\" viewBox=\"0 0 41 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M3.1029 9.66433C3.03308 9.37893 2.96973 9.08348 2.91413 8.77796C1.69099 8.69876 0.251916 8.72264 0.0178899 7.31325C-0.199328 6.00696 1.61082 5.3821 2.7719 5.24883C2.84302 4.64912 2.9749 4.06323 3.17531 3.51381L3.41192 2.95182C3.50372 2.76197 3.60199 2.57715 3.71447 2.39988C5.1057 0.202186 8.70015 -0.934378 10.8361 0.959057C11.599 1.63546 11.7826 2.67396 11.939 3.61565C12.0877 4.51711 12.2881 5.42988 12.9294 5.89506C13.3716 5.89506 13.8461 5.89632 14.3452 5.89632C14.3543 5.67127 14.5301 5.46885 14.9878 5.40976C15.5916 5.33181 15.8851 5.59961 16.008 5.89883C16.0093 5.89883 16.0119 5.89883 16.0132 5.89883C16.039 5.9881 16.0532 6.10125 16.0519 6.2647C16.0494 6.63182 16.0429 7.0002 16.0041 7.3648C15.9395 7.962 15.8114 8.49759 15.5231 9.0093C15.4119 9.15388 15.2348 9.30601 14.94 9.30978C14.6206 9.31356 14.406 9.14131 14.2987 9.00678C14.2638 8.96278 14.2405 8.91878 14.225 8.87351C14.1849 8.86974 14.1448 8.86597 14.1047 8.86094C13.7052 8.87477 13.4337 8.8798 13.1686 8.86597C12.1136 9.32739 11.93 11.2409 11.533 12.1537C11.0133 13.3468 9.72805 13.8171 8.48939 13.9667C5.72116 14.2999 3.69896 12.082 3.1029 9.66433ZM10.2995 11.8645C10.3112 11.8268 10.328 11.7929 10.3538 11.7715C11.749 10.5746 10.0203 8.82951 10.0914 7.41132C10.125 6.76006 10.4508 6.13394 10.6448 5.51914C10.9189 4.64535 10.7728 3.68606 10.4625 2.83992C10.0306 1.66187 8.75316 1.13256 7.48864 1.08478C6.67278 1.05335 5.69659 1.57511 5.14967 2.13585C3.79981 3.51884 3.69249 5.38839 3.73128 7.21644C3.76619 8.93135 4.24847 11.0461 5.88019 11.994C6.9999 12.644 9.20052 12.7949 10.2995 11.8645Z\" fill={props.color} />\n        <path d=\"M17.9688 7.49612C17.9287 7.85821 17.8253 8.50444 17.5848 8.95706C17.4775 9.11421 17.2952 9.30406 16.9655 9.30783C16.6461 9.3116 16.4315 9.13936 16.3242 9.00483C16.2893 8.96083 16.266 8.91682 16.2505 8.8703C16.0876 8.86905 15.9415 8.86779 15.8096 8.86653C16.0565 8.30705 16.1651 7.71488 16.2181 7.07997C16.2505 6.69902 16.2931 6.27783 16.2466 5.89563C16.288 5.89563 16.328 5.89563 16.3694 5.89563C16.3772 5.66932 16.5517 5.46564 17.012 5.4053C17.4361 5.35123 17.7064 5.4669 17.8731 5.64418C18.177 6.21371 18.0386 6.86749 17.9688 7.49612Z\" fill={props.color} />\n        <path d=\"M34.0881 10.8606C34.3325 11.1925 34.1359 11.713 33.8825 11.9745C33.6692 12.1958 33.3214 12.2159 33.033 12.2524C32.499 12.3215 31.9534 12.3479 31.422 12.2499C30.707 12.1179 30.804 11.4917 30.8415 10.9323C30.8453 10.8732 30.879 10.6783 30.9617 10.6695C31.3793 10.6255 31.7375 10.6833 31.744 10.1741C31.744 10.1578 31.753 10.1251 31.7659 10.0874C31.4311 10.0911 31.1169 10.0308 30.9772 9.79318C30.8428 9.5631 30.7898 9.30662 30.7846 9.04636C31.3018 9.02122 31.8202 8.9835 32.3271 9.04636C32.4435 9.06145 32.5314 8.8012 32.4279 8.78737C31.6767 8.69433 30.9074 8.81377 30.1497 8.80246C29.7618 8.79617 29.3752 8.81754 28.9887 8.84143C27.2018 8.8452 24.7464 8.82509 24.109 8.85526C23.0436 8.90681 20.1448 8.89675 17.9299 8.88292C18.1058 8.46174 18.1963 7.98649 18.2351 7.63069C18.2997 7.05612 18.4109 6.45515 18.2971 5.9007C22.5458 5.9095 27.1953 5.92458 29.3274 5.94219L29.5601 5.93213C32.5766 5.9535 34.4256 6.02014 37.442 6.02265C38.916 6.02265 40.1689 6.14838 40.4857 6.55573C40.924 7.12024 41.202 7.39684 40.818 7.97643C40.4133 8.58872 39.4862 8.6717 38.6691 8.6541C38.6729 9.00865 38.6678 9.3896 38.4467 9.67625C38.254 9.92645 37.8894 9.97422 37.5468 9.9868C37.53 10.2621 37.5597 10.5589 37.8584 10.5123C38.1325 10.4696 38.3407 10.6569 38.4893 10.8581C38.7337 11.19 38.5372 11.7105 38.2838 11.972C38.0704 12.1933 37.7226 12.2134 37.4343 12.2499C36.9003 12.319 36.3547 12.3454 35.8233 12.2474C35.1082 12.1153 35.2052 11.4892 35.2427 10.9297C35.2466 10.8707 35.2802 10.6758 35.363 10.667C35.7806 10.623 36.1387 10.6808 36.1452 10.1716C36.1452 10.1553 36.1543 10.1226 36.1672 10.0849C35.8323 10.0886 35.5181 10.0283 35.3785 9.79066C35.1677 9.43109 35.1561 9.01116 35.213 8.60507C34.9065 8.65033 34.5807 8.65913 34.2717 8.65284C34.2756 9.00739 34.2704 9.38834 34.0493 9.675C33.8567 9.92519 33.492 9.97297 33.1494 9.98554C33.1326 10.2609 33.1623 10.5576 33.461 10.5111C33.7312 10.4721 33.9394 10.6594 34.0881 10.8606Z\" fill={props.color} />\n      </svg>\n\n    )\n  } else {\n    return (\n      <svg width=\"41\" height=\"14\" viewBox=\"0 0 41 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M37.8971 9.66433C37.9669 9.37893 38.0303 9.08348 38.0859 8.77796C39.309 8.69876 40.7481 8.72264 40.9821 7.31325C41.1993 6.00696 39.3892 5.3821 38.2281 5.24883C38.157 4.64912 38.0251 4.06323 37.8247 3.51381L37.5881 2.95182C37.4963 2.76197 37.398 2.57715 37.2855 2.39988C35.8943 0.202186 32.2999 -0.934378 30.1639 0.959057C29.401 1.63546 29.2174 2.67396 29.061 3.61565C28.9123 4.51711 28.7119 5.42988 28.0706 5.89506C27.6284 5.89506 27.1539 5.89632 26.6548 5.89632C26.6457 5.67127 26.4699 5.46885 26.0122 5.40976C25.4084 5.33181 25.1149 5.59961 24.992 5.89883C24.9907 5.89883 24.9881 5.89883 24.9868 5.89883C24.961 5.9881 24.9468 6.10125 24.9481 6.2647C24.9506 6.63182 24.9571 7.0002 24.9959 7.3648C25.0605 7.962 25.1886 8.49759 25.4769 9.0093C25.5881 9.15388 25.7652 9.30601 26.06 9.30978C26.3794 9.31356 26.594 9.14131 26.7013 9.00678C26.7362 8.96278 26.7595 8.91878 26.775 8.87351C26.8151 8.86974 26.8552 8.86597 26.8953 8.86094C27.2948 8.87477 27.5663 8.8798 27.8314 8.86597C28.8864 9.32739 29.07 11.2409 29.467 12.1537C29.9867 13.3468 31.2719 13.8171 32.5106 13.9667C35.2788 14.2999 37.301 12.082 37.8971 9.66433ZM30.7005 11.8645C30.6888 11.8268 30.672 11.7929 30.6462 11.7715C29.251 10.5746 30.9797 8.82951 30.9086 7.41132C30.875 6.76006 30.5492 6.13394 30.3552 5.51914C30.0811 4.64535 30.2272 3.68606 30.5375 2.83992C30.9694 1.66187 32.2468 1.13256 33.5114 1.08478C34.3272 1.05335 35.3034 1.57511 35.8503 2.13585C37.2002 3.51884 37.3075 5.38839 37.2687 7.21644C37.2338 8.93135 36.7515 11.0461 35.1198 11.994C34.0001 12.644 31.7995 12.7949 30.7005 11.8645Z\" fill={props.color} />\n        <path d=\"M23.0312 7.49612C23.0713 7.85821 23.1747 8.50444 23.4152 8.95706C23.5225 9.11421 23.7048 9.30406 24.0345 9.30783C24.3539 9.3116 24.5685 9.13936 24.6758 9.00483C24.7107 8.96083 24.734 8.91682 24.7495 8.8703C24.9124 8.86905 25.0585 8.86779 25.1904 8.86653C24.9435 8.30705 24.8349 7.71488 24.7819 7.07997C24.7495 6.69902 24.7069 6.27783 24.7534 5.89563C24.712 5.89563 24.672 5.89563 24.6306 5.89563C24.6228 5.66932 24.4483 5.46564 23.988 5.4053C23.5639 5.35123 23.2936 5.4669 23.1269 5.64418C22.823 6.21371 22.9614 6.86749 23.0312 7.49612Z\" fill={props.color} />\n        <path d=\"M6.9119 10.8606C6.66753 11.1925 6.86406 11.713 7.11748 11.9745C7.33082 12.1958 7.67863 12.2159 7.96696 12.2524C8.50095 12.3215 9.04658 12.3479 9.57799 12.2499C10.293 12.1179 10.196 11.4917 10.1585 10.9323C10.1547 10.8732 10.121 10.6783 10.0383 10.6695C9.62066 10.6255 9.26251 10.6833 9.25604 10.1741C9.25604 10.1578 9.24699 10.1251 9.23406 10.0874C9.56894 10.0911 9.88313 10.0308 10.0228 9.79318C10.1572 9.5631 10.2102 9.30662 10.2154 9.04636C9.69824 9.02122 9.17976 8.9835 8.67292 9.04636C8.55655 9.06145 8.46863 8.8012 8.57207 8.78737C9.32328 8.69433 10.0926 8.81377 10.8503 8.80246C11.2382 8.79617 11.6248 8.81754 12.0113 8.84143C13.7982 8.8452 16.2536 8.82509 16.891 8.85526C17.9564 8.90681 20.8552 8.89675 23.0701 8.88292C22.8942 8.46174 22.8037 7.98649 22.7649 7.63069C22.7003 7.05612 22.5891 6.45515 22.7029 5.9007C18.4542 5.9095 13.8047 5.92458 11.6726 5.94219L11.4399 5.93213C8.42337 5.9535 6.57444 6.02014 3.55795 6.02265C2.08397 6.02265 0.831089 6.14838 0.514315 6.55573C0.0759983 7.12024 -0.201988 7.39684 0.18202 7.97643C0.58672 8.58872 1.51378 8.6717 2.33093 8.6541C2.32705 9.00865 2.33222 9.3896 2.55332 9.67625C2.74597 9.92645 3.11059 9.97422 3.45322 9.9868C3.47003 10.2621 3.44029 10.5589 3.14162 10.5123C2.86751 10.4696 2.65934 10.6569 2.51065 10.8581C2.26628 11.19 2.46281 11.7105 2.71623 11.972C2.92957 12.1933 3.27738 12.2134 3.56571 12.2499C4.0997 12.319 4.64533 12.3454 5.17674 12.2474C5.89175 12.1153 5.79478 11.4892 5.75728 10.9297C5.7534 10.8707 5.71979 10.6758 5.63704 10.667C5.21941 10.623 4.86126 10.6808 4.85479 10.1716C4.85479 10.1553 4.84574 10.1226 4.83281 10.0849C5.16769 10.0886 5.48188 10.0283 5.62152 9.79066C5.83227 9.43109 5.84391 9.01116 5.78702 8.60507C6.09345 8.65033 6.41928 8.65913 6.7283 8.65284C6.72442 9.00739 6.72959 9.38834 6.95069 9.675C7.14334 9.92519 7.50795 9.97297 7.85059 9.98554C7.8674 10.2609 7.83766 10.5576 7.53899 10.5111C7.26876 10.4721 7.06059 10.6594 6.9119 10.8606Z\" fill={props.color} />\n      </svg>\n    )\n  }\n\n}\n\nexport default SmallKey;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport appRoutes from \"../../shared/appRoutes\";\nimport Wrapper from \"./NavBar.style.js\";\nimport SmallKey from \"../../components/SmallKey\";\n\nconst NavBar = props => {\n  console.log(props.pageName);\n\n  const pages = [\"workroom\", \"room237\", \"elevator\", \"bathroom\", \"corridor\", \"snowfield\"];\n  const titles = [\"the work room\", \"room 237\", \"the elevator\", \"the bathroom\", \"the corridor\", \"the snow field\"];\n\n  let nextPage = \"\";\n  let nextTitle = \"\";\n\n  for (let i = 0; i < pages.length; i++) {\n    if (props.pageName == pages[pages.length - 1]) {\n      nextPage = pages[0];\n      nextTitle = titles[0];\n    } else {\n      if (pages[i] == props.pageName) {\n        nextPage = pages[i + 1];\n        nextTitle = titles[i + 1]\n      }\n    }\n  }\n\n  let route = \"../\" + nextPage;\n  console.log(route)\n\n  return (\n    <Wrapper>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div className=\"nav-item\">\n          <NavLink className=\"nav-link\" to={appRoutes.home} exact>\n            <SmallKey color={props.color} />\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <span style={{ color: props.color }}>Go back to lobby</span>\n          </NavLink>\n        </div>\n        <div className=\"nav-item\">\n          <NavLink className=\"nav-link\" to={route}>\n            <span style={{ color: props.color }}>Go to {nextTitle}</span>\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <SmallKey\n              color={props.color}\n              flipped />\n          </NavLink>\n        </div>\n      </nav>\n    </Wrapper>\n  );\n};\n\nexport default NavBar;\n","import Wendy from \"../assets/imgs/sketches/wendy.png\";\nimport DeadLady from \"../assets/imgs/sketches/dead.png\";\nimport MadameD from \"../assets/imgs/sketches/madame.png\";\nimport JudeLaw from \"../assets/imgs/sketches/judelaw.png\";\nimport Danny from \"../assets/imgs/sketches/danny.png\";\nimport Jack from \"../assets/imgs/sketches/jack.png\";\n\nexport default [\n  { name: \"Work room\", photo: Wendy, route: \"workroom\" },\n  { name: \"Room 237\", photo: DeadLady, route: \"room237\" },\n  { name: \"The Elevator\", photo: MadameD, route: \"elevator\" },\n  { name: \"The Bathroom\", photo: JudeLaw, route: \"bathroom\" },\n  { name: \"The Corridor\", photo: Danny, route: \"corridor\" },\n  { name: \"The Snow Field\", photo: Jack, route: \"snowfield\" }\n];\n","import styled from \"styled-components\";\nimport Banner from \"../../assets/imgs/banner.png\";\nimport Lettering from \"../../assets/imgs/lettering.png\";\nimport colors from \"../../components/colors\";\n\nconst ContentWrapper = styled.div`\n  .Banner {\n    position: relative;\n    background-image: url(${Banner});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n    width: 100%;\n    height: 90vh;\n    padding-top: 16vh;\n  }\n\n  .BannerTextContainer {\n    margin: 0 auto;\n    max-width: 800px;\n    height: 100%;\n    background-image: url(${Lettering});\n    background-size: contain;\n    background-repeat: no-repeat;\n    color: ${colors.pink1};\n    text-align: center;\n\n    .Text {\n      padding-top: 140px;\n    }\n\n    a {\n      color: ${colors.pink1};\n    }\n  }\n\n\n  .container {\n    box-shadow: inset 0px 0px 0px 10px ${colors.red1};\n    background-color: ${colors.red2};\n    box-sizing: border-box;\n    padding: 4em;\n  }\n\n  .deco {\n    font-family: charcuterie-ornaments, sans-serif;\n    font-size: 6em;\n    line-height: 1em;\n    margin: -0.2em auto -0.4em;\n  }\n\n  .row {\n    display: flex;\n    justify-content: space-around;\n  }\n\n  @media screen and (max-width: 600px) {\n    .Banner {\n      height: 300px;\n    }\n  }\n`;\n\nexport default ContentWrapper;\n","import styled from \"styled-components\";\nimport colors from \"../../components/colors\";\nimport KeyBG from \"../../assets/imgs/KeyBG.svg\";\nimport KeyChain from \"../../assets/imgs/KeyChain.svg\";\n\nconst KeyWrapper = styled.div`\n  background-image: url(${KeyBG});\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 168px;\n  padding: 0 16px;\n\n  .KeyChain {\n    background-image: url(${KeyChain});\n    background-repeat: no-repeat;\n    background-size: contain;\n    width: 100%;\n    height: 300px;\n    margin: 16px auto;\n    padding: 16px auto;\n    color: ${colors.red1};\n    text-align: center;\n  }\n\n  .KeyChain:hover {\n    transform: rotateZ(-3deg);\n    transform-origin: top center;\n    transition: transform 0.15s ease;\n  }\n\n  img {\n    width: 100%;\n    display: block;\n    margin: 0 auto;\n  }\n\n  h4 {\n    margin-top: 0em;\n  }\n`;\n\nexport default KeyWrapper;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport KeyWrapper from \"./Key.style.js\";\n\nconst Key = props => {\n  return (\n    <KeyWrapper>\n      <Link to={`/${props.path}/`}>\n        <div className=\"KeyChain\">\n          <img src={props.photo} />\n          <h4>{props.name}</h4>\n        </div>\n      </Link>\n    </KeyWrapper>\n  );\n};\n\nexport default Key;\n","import React, { Component } from \"react\";\nimport colors from \"../../components/colors\";\nimport charList from \"../characterList\";\nimport ContentWrapper from \"./HomePage.style.js\";\nimport Key from \"../Key/Key\";\n\nclass homePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.listenScrollEvent = this.listenScrollEvent.bind(this);\n    this.state = {\n      scrollY: 0,\n      velocity: 0.24\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.listenScrollEvent, {\n      passive: true\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.listenScrollEvent, {\n      passive: true\n    });\n  }\n\n  listenScrollEvent() {\n    var scrollTop =\n      document.body.scrollTop || document.documentElement.scrollTop;\n    var scrolled = scrollTop * this.state.velocity;\n    this.setState({ scrollY: scrolled });\n  }\n\n  render() {\n    document.body.style = `background:${colors.red1}`;\n\n    return (\n      <ContentWrapper>\n        <div\n          className=\"Banner\"\n          style={{\n            backgroundPositionY: this.state.scrollY * this.state.velocity + \"%\"\n          }}\n        >\n          <div className=\"BannerTextContainer\">\n            <div className=\"Text\">\n              <span>Designed & Developed by Haley Park</span>\n              <br></br>\n              <span>Inspired by </span>\n              <a\n                href=\"https://www.youtube.com/watch?v=Nsi06PG7w_0\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                this youtube video\n              </a>\n            </div>\n          </div>\n        </div>\n        <br />\n\n        <div className=\"container\">\n          <h1 className=\"deco\">x</h1>\n          <h1>Concierge</h1>\n\n          <div className=\"row\">\n            {charList.map((Character, i, arr) => {\n              return (\n                <>\n                  <Key\n                    name={Character.name}\n                    photo={Character.photo}\n                    path={Character.route}\n                  />\n                </>\n              );\n            })}\n          </div>\n        </div>\n      </ContentWrapper>\n    );\n  }\n}\n\nexport default homePage;\n","import styled from \"styled-components\";\nimport colors from \"../../components/colors\";\n\nconst Wrapper = styled.div`\n  max-width: 1080px;\n  margin: 4em auto 8em;\n\n  .row {\n    display: flex;\n    justify-content: space-evenly;\n    align-items:flex-start;\n    margin-bottom: 4em;\n\n    img {\n      display: block;\n    }\n  }\n\n  .box {\n    background-color: ${colors.pink0};\n    color: ${colors.red0};\n    padding: 1em;\n\n    .inner {\n      border: 1px solid ${colors.red0};\n      width: calc(100% - 3em);\n      height: calc(100% - 3em);\n      padding: 1.5em;\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\n\nconst TitleGraphic = props => {\n  return (\n    <svg width=\"183\" height=\"166\" viewBox=\"0 0 183 166\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M107.526 153.421C102.521 151.909 97.5671 152.279 92.7213 154.151C92.2589 154.329 91.8066 154.527 91.3596 154.73C87.6032 152.391 82.8704 151.543 78.4871 151.65C76.3134 151.701 73.6875 152.254 72.6701 154.379C71.6218 156.566 73.0246 159.453 74.926 160.676C78.5796 163.025 83.8571 160.351 87.1972 158.672C88.6977 157.916 90.1571 157.104 91.6576 156.353C91.8272 156.48 91.9968 156.607 92.1715 156.744C92.6597 157.134 93.2352 157.632 93.8775 158.169C89.3195 159.25 85.2599 161.746 81.2928 164.542C80.6351 165.008 82.1972 165.957 82.7985 165.536C86.4059 162.994 90.5682 160.057 95.0646 159.143C98.7131 162.076 103.744 165.363 106.94 161.665C109.869 158.276 100.841 157.657 99.3811 157.606C97.9937 157.561 96.6627 157.657 95.3678 157.87C94.5199 157.16 93.6874 156.444 92.8652 155.785C92.8652 155.785 92.8601 155.78 92.8549 155.78C93.0091 155.709 93.1633 155.638 93.3174 155.572C97.8857 153.563 102.737 153.162 107.526 154.608C108.708 154.968 108.43 153.695 107.526 153.421ZM84.2784 158.332C81.9814 159.402 78.0297 161.305 75.5837 159.732C74.3556 158.946 74.001 157.053 74.1706 155.739C74.3402 154.425 75.5375 153.684 76.6885 153.294C79.4737 152.35 82.9372 153.02 85.7121 153.664C87.3668 154.05 88.7645 154.567 90.0955 155.328C88.1427 156.302 86.2517 157.408 84.2784 158.332ZM96.9299 158.895C99.2835 158.732 101.786 158.829 104.098 159.296C104.89 159.458 106.061 159.62 105.491 160.605C104.623 162.096 102.737 162.157 101.293 161.645C99.6226 161.051 98.1067 160.041 96.6679 158.92C96.7552 158.915 96.8374 158.9 96.9299 158.895Z\" fill={props.color} />\n      <path d=\"M108.058 10.3585C107.88 10.0699 107.689 9.77824 107.484 9.48453C108.39 8.44834 109.553 7.32486 108.588 5.98778C107.693 4.74825 105.745 5.67558 104.714 6.48893C104.168 6.05555 103.584 5.68175 102.976 5.39215L102.329 5.12103C102.101 5.03888 101.872 4.96596 101.638 4.91051C98.7382 4.2204 94.9549 6.14695 94.805 9.39006C94.7516 10.5485 95.454 11.5425 96.0989 12.436C96.7172 13.2904 97.3035 14.1951 97.1742 15.0845C96.8229 15.4357 96.4471 15.8136 96.0507 16.21C95.8597 16.0334 95.5547 16.0077 95.1428 16.323C94.5996 16.7389 94.5852 17.1908 94.7321 17.5327C94.731 17.5338 94.729 17.5358 94.728 17.5368C94.7803 17.6303 94.8615 17.734 94.996 17.8665C95.2979 18.1643 95.6039 18.4601 95.9326 18.7271C96.4717 19.1635 97.0109 19.4993 97.6578 19.6883C97.8643 19.7181 98.1292 19.7016 98.3664 19.4706C98.6232 19.22 98.653 18.9088 98.6283 18.7137C98.6201 18.65 98.6026 18.5956 98.578 18.5463C98.6067 18.5114 98.6355 18.4765 98.6632 18.4405C98.9918 18.1345 99.2116 17.923 99.4108 17.7011C100.626 17.24 102.335 18.6572 103.395 19.0875C104.783 19.6493 106.188 19.0126 107.294 18.151C109.765 16.2244 109.559 12.8067 108.058 10.3585ZM104.139 17.8716C104.099 17.8501 104.058 17.8357 104.02 17.8388C101.934 17.9692 101.882 15.1707 100.667 14.0688C100.108 13.5636 99.3379 13.3109 98.6817 12.9628C97.7503 12.4668 97.0828 11.5672 96.6381 10.6296C96.0188 9.32433 96.6011 7.87736 97.5664 6.83398C98.1888 6.1603 99.3903 5.81114 100.283 5.83476C102.485 5.89227 104.097 7.33411 105.559 8.8581C106.932 10.2866 108.276 12.397 107.755 14.4673C107.396 15.8876 105.772 17.7587 104.139 17.8716Z\" fill={props.color} />\n      <path d=\"M94.4793 20.3948C94.8069 20.6587 95.4169 21.1044 95.9776 21.2831C96.1913 21.3263 96.4911 21.3365 96.7561 21.0777C97.0128 20.8272 97.0426 20.516 97.0179 20.3209C97.0097 20.2572 96.9923 20.2028 96.9666 20.1525C97.095 20.022 97.21 19.905 97.3137 19.7992C96.6606 19.5383 96.0906 19.1409 95.5299 18.6644C95.1931 18.3789 94.8151 18.0688 94.5399 17.7196C94.5071 17.7525 94.4752 17.7843 94.4424 17.8172C94.2514 17.6385 93.9463 17.6108 93.5315 17.9271C93.1505 18.2197 93.0303 18.5289 93.0426 18.8061C93.2665 19.5127 93.9104 19.9368 94.4793 20.3948Z\" fill={props.color} />\n      <path d=\"M84.4246 35.946C84.5016 36.4112 85.0828 36.6803 85.4977 36.6926C85.8479 36.7039 86.1406 36.4441 86.3994 36.2448C86.88 35.8772 87.3349 35.4654 87.6769 34.9632C88.137 34.2875 87.5486 33.8531 87.0618 33.4259C87.0104 33.3807 86.8246 33.2482 86.7516 33.3067C86.384 33.6025 86.1468 33.9342 85.7257 33.5234C85.7124 33.5101 85.6785 33.4906 85.6374 33.47C85.9065 33.2071 86.1067 32.9083 86.0235 32.6033C85.9424 32.3085 85.775 32.0569 85.5665 31.8403C85.1352 32.2305 84.6926 32.6115 84.3414 33.0654C84.2613 33.1702 83.9789 33.0274 84.0497 32.934C84.5704 32.2613 85.279 31.7478 85.8715 31.1368C86.1745 30.8236 86.499 30.534 86.8256 30.2464C88.2479 28.8303 90.1816 26.8637 90.7126 26.382C91.6009 25.5779 93.8951 23.2673 95.643 21.4968C95.1593 21.2925 94.6992 20.9762 94.3778 20.7164C93.8571 20.2984 93.2779 19.8958 92.9154 19.3526C89.548 22.7343 85.8674 26.4395 84.1884 28.1473L83.9953 28.324C81.6169 30.7373 80.2028 32.2603 77.809 34.6582C76.6383 35.8289 75.7458 36.9267 75.827 37.5111C75.9399 38.3203 75.9451 38.767 76.7235 38.9354C77.5451 39.1141 78.3492 38.4456 78.9838 37.7822C79.2703 38.0749 79.5856 38.3819 79.9954 38.4404C80.3527 38.4918 80.6814 38.2412 80.9638 37.9793C81.202 38.1909 81.4208 38.4569 81.1455 38.6561C80.8929 38.8389 80.8806 39.1573 80.9268 39.4397C81.0038 39.9049 81.5851 40.1739 82 40.1863C82.3501 40.1976 82.6428 39.9377 82.9016 39.7385C83.3822 39.3709 83.8372 38.9591 84.1791 38.4569C84.6392 37.7811 84.0508 37.3467 83.564 36.9195C83.5126 36.8744 83.3268 36.7419 83.2539 36.8004C82.8862 37.0962 82.649 37.4279 82.2279 37.0171C82.2146 37.0037 82.1807 36.9842 82.1396 36.9637C82.4087 36.7008 82.6089 36.402 82.5257 36.097C82.3994 35.6359 82.0657 35.2836 81.6888 34.9971C81.9691 34.7907 82.2351 34.5391 82.4754 34.2885C82.7619 34.5812 83.0772 34.8882 83.487 34.9468C83.8443 34.9981 84.173 34.7475 84.4554 34.4857C84.6936 34.6972 84.9124 34.9632 84.6372 35.1624C84.3907 35.3452 84.3784 35.6636 84.4246 35.946Z\" fill={props.color} />\n      <path d=\"M75.9235 10.3585C76.1011 10.0699 76.2921 9.77824 76.4975 9.48453C75.5907 8.44834 74.4282 7.32486 75.3935 5.98778C76.288 4.74825 78.2361 5.67558 79.2672 6.48893C79.8135 6.05555 80.3968 5.68175 81.0048 5.39215L81.6518 5.12103C81.8798 5.03888 82.1088 4.96596 82.3429 4.91051C85.243 4.2204 89.0263 6.14695 89.1762 9.39006C89.2296 10.5485 88.5272 11.5425 87.8823 12.436C87.264 13.2904 86.6777 14.1951 86.8071 15.0845C87.1583 15.4357 87.5341 15.8136 87.9305 16.21C88.1215 16.0334 88.4265 16.0077 88.8384 16.323C89.3816 16.7389 89.396 17.1908 89.2491 17.5327C89.2502 17.5338 89.2522 17.5358 89.2532 17.5368C89.2009 17.6303 89.1197 17.734 88.9852 17.8665C88.6833 18.1643 88.3773 18.4601 88.0486 18.7271C87.5095 19.1635 86.9703 19.4993 86.3234 19.6883C86.1169 19.7181 85.852 19.7016 85.6148 19.4706C85.358 19.22 85.3282 18.9088 85.3529 18.7137C85.3611 18.65 85.3786 18.5956 85.4032 18.5463C85.3745 18.5114 85.3457 18.4765 85.318 18.4405C84.9894 18.1345 84.7696 17.923 84.5704 17.7011C83.3555 17.24 81.6466 18.6572 80.5858 19.0875C79.1984 19.6493 77.7935 19.0126 76.6875 18.151C74.2167 16.2244 74.4221 12.8067 75.9235 10.3585ZM79.8423 17.8716C79.8823 17.8501 79.9234 17.8357 79.9614 17.8388C82.0471 17.9692 82.0995 15.1707 83.3144 14.0688C83.8731 13.5636 84.6433 13.3109 85.2995 12.9628C86.2309 12.4668 86.8984 11.5672 87.3431 10.6296C87.9624 9.32433 87.3801 7.87736 86.4148 6.83398C85.7924 6.1603 84.5909 5.81114 83.6985 5.83476C81.4967 5.89227 79.8844 7.33411 78.422 8.8581C77.049 10.2866 75.7047 12.397 76.2264 14.4673C76.5848 15.8876 78.2094 17.7587 79.8423 17.8716Z\" fill={props.color} />\n      <path d=\"M89.5019 20.3948C89.1743 20.6587 88.5643 21.1044 88.0036 21.2831C87.7899 21.3263 87.4901 21.3365 87.2251 21.0777C86.9684 20.8272 86.9386 20.516 86.9633 20.3209C86.9715 20.2572 86.9889 20.2028 87.0146 20.1525C86.8862 20.022 86.7712 19.905 86.6675 19.7992C87.3206 19.5383 87.8906 19.1409 88.4513 18.6644C88.7881 18.3789 89.1661 18.0688 89.4413 17.7196C89.4741 17.7525 89.506 17.7843 89.5388 17.8172C89.7299 17.6385 90.0349 17.6108 90.4497 17.9271C90.8307 18.2197 90.9509 18.5289 90.9386 18.8061C90.7147 19.5127 90.0708 19.9368 89.5019 20.3948Z\" fill={props.color} />\n      <path d=\"M99.5566 35.946C99.4796 36.4112 98.8984 36.6803 98.4835 36.6926C98.1333 36.7039 97.8406 36.4441 97.5818 36.2448C97.1012 35.8772 96.6463 35.4654 96.3043 34.9632C95.8442 34.2875 96.4326 33.8531 96.9194 33.4259C96.9708 33.3807 97.1566 33.2482 97.2296 33.3067C97.5972 33.6025 97.8344 33.9342 98.2555 33.5234C98.2688 33.5101 98.3027 33.4906 98.3438 33.47C98.0747 33.2071 97.8745 32.9083 97.9577 32.6033C98.0388 32.3085 98.2062 32.0569 98.4147 31.8403C98.846 32.2305 99.2886 32.6115 99.6398 33.0654C99.7199 33.1702 100.002 33.0274 99.9315 32.934C99.4108 32.2613 98.7022 31.7478 98.1097 31.1368C97.8067 30.8236 97.4822 30.534 97.1556 30.2464C95.7333 28.8303 93.7996 26.8637 93.2686 26.382C92.3803 25.5779 90.0861 23.2673 88.3382 21.4968C88.8219 21.2925 89.282 20.9762 89.6034 20.7164C90.1241 20.2984 90.7033 19.8958 91.0658 19.3526C94.4332 22.7343 98.1138 26.4395 99.7928 28.1473L99.9859 28.324C102.364 30.7373 103.778 32.2603 106.172 34.6582C107.343 35.8289 108.235 36.9267 108.154 37.5111C108.041 38.3203 108.036 38.767 107.258 38.9354C106.436 39.1141 105.632 38.4456 104.997 37.7822C104.711 38.0749 104.396 38.3819 103.986 38.4404C103.628 38.4918 103.3 38.2412 103.017 37.9793C102.779 38.1909 102.56 38.4569 102.836 38.6561C103.088 38.8389 103.101 39.1573 103.054 39.4397C102.977 39.9049 102.396 40.1739 101.981 40.1863C101.631 40.1976 101.338 39.9377 101.08 39.7385C100.599 39.3709 100.144 38.9591 99.8021 38.4569C99.342 37.7811 99.9304 37.3467 100.417 36.9195C100.469 36.8744 100.654 36.7419 100.727 36.8004C101.095 37.0962 101.332 37.4279 101.753 37.0171C101.767 37.0037 101.801 36.9842 101.842 36.9637C101.573 36.7008 101.372 36.402 101.455 36.097C101.582 35.6359 101.916 35.2836 102.292 34.9971C102.012 34.7907 101.746 34.5391 101.506 34.2885C101.219 34.5812 100.904 34.8882 100.494 34.9468C100.137 34.9981 99.8082 34.7475 99.5258 34.4857C99.2876 34.6972 99.0688 34.9632 99.344 35.1624C99.5905 35.3452 99.6028 35.6636 99.5566 35.946Z\" fill={props.color} />\n      <path d=\"M178.74 127.401C178.74 121.076 171.11 115.034 161.56 115.034C150.278 115.034 141.759 121.123 141.759 126.835C141.759 129.809 143.865 131.555 146.253 131.555C147.751 131.555 148.827 130.989 149.67 130.186C150.325 129.573 149.342 128.581 148.734 129.242C148.172 129.856 147.329 130.281 146.253 130.281C144.661 130.281 143.023 129.242 143.023 126.835C143.023 121.548 151.542 116.308 161.56 116.308C169.986 116.308 177.476 121.595 177.476 127.401C177.476 128.723 177.289 129.856 176.727 131.036C176.4 131.744 177.476 132.263 177.851 131.508C178.553 130.092 178.74 128.912 178.74 127.401ZM183 127.779C183 118.952 173.31 111.729 161.467 111.729C146.721 111.729 138.763 117.772 130.477 125.985C123.315 133.113 117.838 140.524 108.803 140.524C102.858 140.524 100.19 138.211 97.0534 135.521C96.4448 135.001 95.6022 135.945 96.2108 136.465C99.628 139.439 102.53 141.799 108.803 141.799C118.306 141.799 125.141 135.049 132.396 127.873C139.137 121.17 147.423 113.004 161.467 113.004C172.514 113.004 180.753 119.613 180.753 127.779C180.753 135.19 173.778 141.232 164.884 142.318V141.232C164.884 140.383 163.62 140.383 163.62 141.232V142.46C163.339 142.507 162.871 142.507 162.871 142.507C162.73 141.138 162.122 140.099 161.326 140.099C160.53 140.099 159.922 141.091 159.781 142.507C159.781 142.507 159.266 142.46 159.032 142.46V141.232C159.032 140.383 157.768 140.383 157.768 141.232V142.318C151.542 141.61 145.644 138.919 142.367 135.285C141.806 134.671 140.869 135.521 141.431 136.134C144.848 140.005 150.887 142.79 157.768 143.593V144.867C157.768 145.717 159.032 145.717 159.032 144.867V143.734C159.266 143.734 159.828 143.781 159.828 143.781C160.015 145.056 160.577 146 161.326 146C162.075 146 162.637 145.056 162.824 143.781C162.824 143.781 163.292 143.781 163.62 143.734V144.867C163.62 145.717 164.884 145.717 164.884 144.867V143.64C174.995 142.46 183 135.662 183 127.779ZM147.704 111.257C148.5 111.021 148.125 109.794 147.329 110.03C138.903 112.343 132.724 117.347 126.685 123.342C119.664 130.328 114.982 136.653 109.037 136.653C105.901 136.653 104.871 135.285 104.871 134.199C104.871 133.066 105.433 132.688 106.369 132.452C107.539 132.169 108.335 131.461 108.335 130.375C108.335 129.29 107.492 128.44 106.135 128.44C104.403 128.44 102.624 130.186 102.624 132.83C102.624 135.757 104.918 137.928 109.037 137.928C115.544 137.928 120.132 131.603 127.528 124.286C133.333 118.527 139.371 113.57 147.704 111.257ZM138.669 137.739C138.669 134.812 136.329 132.688 133.567 132.688C129.681 132.688 126.217 136.889 120.366 140.052C116.948 141.893 113.157 143.357 108.616 143.357C105.48 143.357 104.216 143.073 102.203 142.365C101.407 142.082 101.032 143.309 101.828 143.593C103.935 144.301 105.48 144.631 108.616 144.631C113.344 144.631 117.417 143.121 120.927 141.185C126.592 138.117 129.915 133.963 133.473 133.963C135.392 133.963 136.422 135.096 136.422 136.134C136.422 137.267 135.626 137.975 134.877 138.164C133.707 138.447 132.958 139.108 132.958 140.194C132.958 141.28 133.801 142.129 135.158 142.129C136.89 142.129 138.669 140.383 138.669 137.739Z\" fill={props.color} />\n      <path d=\"M4.21092 127.401C4.21092 121.076 11.7535 115.034 21.1934 115.034C32.3454 115.034 40.7672 121.123 40.7672 126.835C40.7672 129.809 38.6849 131.555 36.325 131.555C34.8442 131.555 33.7799 130.989 32.947 130.186C32.2991 129.573 33.2709 128.581 33.8724 129.242C34.4277 129.856 35.2607 130.281 36.325 130.281C37.8983 130.281 39.5178 129.242 39.5178 126.835C39.5178 121.548 31.096 116.308 21.1934 116.308C12.8641 116.308 5.46031 121.595 5.46031 127.401C5.46031 128.723 5.64541 129.856 6.20069 131.036C6.52461 131.744 5.4603 132.263 5.09011 131.508C4.39601 130.092 4.21092 128.912 4.21092 127.401ZM-1.32073e-06 127.779C-1.32073e-06 118.952 9.57868 111.729 21.286 111.729C35.8622 111.729 43.7288 117.772 51.9192 125.985C58.9991 133.113 64.4132 140.524 73.344 140.524C79.2208 140.524 81.8584 138.211 84.9587 135.521C85.5603 135.001 86.3932 135.945 85.7917 136.465C82.4137 139.439 79.5447 141.799 73.344 141.799C63.9504 141.799 57.1944 135.049 50.022 127.873C43.3586 121.17 35.1681 113.004 21.286 113.004C10.3653 113.004 2.22114 119.613 2.22114 127.779C2.22114 135.19 9.11594 141.232 17.908 142.318V141.232C17.908 140.383 19.1574 140.383 19.1574 141.232V142.46C19.435 142.507 19.8977 142.507 19.8977 142.507C20.0366 141.138 20.6381 140.099 21.4248 140.099C22.2114 140.099 22.813 141.091 22.9518 142.507C22.9518 142.507 23.4608 142.46 23.6922 142.46V141.232C23.6922 140.383 24.9416 140.383 24.9416 141.232V142.318C31.096 141.61 36.9265 138.919 40.1657 135.285C40.721 134.671 41.6464 135.521 41.0912 136.134C37.7132 140.005 31.7438 142.79 24.9416 143.593V144.867C24.9416 145.717 23.6922 145.717 23.6922 144.867V143.734C23.4608 143.734 22.9055 143.781 22.9055 143.781C22.7204 145.056 22.1652 146 21.4248 146C20.6844 146 20.1291 145.056 19.944 143.781C19.944 143.781 19.4813 143.781 19.1574 143.734V144.867C19.1574 145.717 17.908 145.717 17.908 144.867V143.64C7.91282 142.46 -1.32073e-06 135.662 -1.32073e-06 127.779ZM34.8905 111.257C34.1038 111.021 34.474 109.794 35.2607 110.03C43.5899 112.343 49.6981 117.347 55.6674 123.342C62.6085 130.328 67.2359 136.653 73.1126 136.653C76.213 136.653 77.231 135.285 77.231 134.199C77.231 133.066 76.6757 132.688 75.7503 132.452C74.5934 132.169 73.8067 131.461 73.8067 130.375C73.8067 129.29 74.6397 128.44 75.9816 128.44C77.6937 128.44 79.4522 130.186 79.4522 132.83C79.4522 135.757 77.1847 137.928 73.1126 137.928C66.6806 137.928 62.1457 131.603 54.8345 124.286C49.0965 118.527 43.1272 113.57 34.8905 111.257ZM43.8213 137.739C43.8213 134.812 46.135 132.688 48.8652 132.688C52.7059 132.688 56.1301 136.889 61.9144 140.052C65.2924 141.893 69.0405 143.357 73.5291 143.357C76.6295 143.357 77.8788 143.073 79.8686 142.365C80.6553 142.082 81.0255 143.309 80.2388 143.593C78.1565 144.301 76.6295 144.631 73.5291 144.631C68.8554 144.631 64.8296 143.121 61.3591 141.185C55.76 138.117 52.4745 133.963 48.9577 133.963C47.0605 133.963 46.0425 135.096 46.0425 136.134C46.0425 137.267 46.8291 137.975 47.5695 138.164C48.7263 138.447 49.4667 139.108 49.4667 140.194C49.4667 141.28 48.6338 142.129 47.2918 142.129C45.5797 142.129 43.8213 140.383 43.8213 137.739Z\" fill={props.color} />\n    </svg>\n\n  )\n}\n\nexport default TitleGraphic;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Quote = props => {\n  return (\n    <Wrapper>\n      <div className=\"left\">\n        <svg width=\"16\" height=\"12\" viewBox=\"0 0 16 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M5.72222 5.92573C4.55556 5.37018 4.05556 4.92573 4.05556 4.00906C4.05556 2.78684 5.05556 2.00906 7.27778 0.981287C7.61111 0.842398 7.25 -0.102047 6.83333 0.00906415C2.16667 1.25906 0 4.06462 0 7.06462C0 9.81462 1.77778 11.5091 4.33333 11.5091C6.05556 11.5091 7.66667 10.5646 7.66667 8.5924C7.66667 7.39795 7.13889 6.62018 5.72222 5.92573ZM14.0556 5.92573C12.8889 5.37018 12.3889 4.92573 12.3889 4.00906C12.3889 2.78684 13.3889 2.00906 15.6111 0.981287C15.9444 0.842398 15.5833 -0.102047 15.1667 0.00906415C10.5 1.25906 8.33333 4.06462 8.33333 7.06462C8.33333 9.81462 10.1111 11.5091 12.6667 11.5091C14.3889 11.5091 16 10.5646 16 8.5924C16 7.39795 15.4722 6.62018 14.0556 5.92573Z\" fill={props.color} />\n        </svg>\n      </div>\n      <div className=\"right\"> {props.children}</div>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  min-width: 250px;\n  margin-left: 32px;\n  font-size: 1.1em;\n\n    .left {\n      margin-right: 16px;\n    }\n`;\n\nexport default Quote;\n","import React from \"react\";\nimport Wrapper from \"./WorkroomPage.style.js\";\nimport colors from \"../../components/colors\";\nimport TitleGraphic from \"../../components/TitleGraphic\"\nimport NavBar from \"../NavBar/NavBar\";\nimport writing from \"../../assets/imgs/writing.gif\";\nimport shaking from \"../../assets/imgs/shaking.gif\";\nimport Quote from \"../../components/Quote\"\n\nconst WorkroomPage = () => {\n  document.body.style = `background:${colors.purple}`;\n  let contentColor = colors.apricot\n\n  return (\n    <>\n      <NavBar pageName=\"workroom\" color={contentColor} />\n      <Wrapper>\n\n        <div className=\"container\">\n          <div className=\"title\">\n            <TitleGraphic className=\"graphic\" color={contentColor} />\n            <h2>The Work Room</h2>\n          </div>\n\n          <br></br> <br></br> <br></br>\n          <div className=\"row\">\n            <img src={writing}></img>\n            <div className=\"box\">\n              <div className=\"inner\">\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n                All work and no play makes Jack a dull boy.<br></br>\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"row\">\n            <Quote color={contentColor}>I've never seen her like that before. She was shaking like a shitting dog.</Quote>\n            <img src={shaking}></img>\n          </div> */}\n        </div>\n      </Wrapper></>\n\n  );\n};\n\nexport default WorkroomPage;\n","import styled from \"styled-components\";\nimport colors from \"../../components/colors\";\n\nconst Wrapper = styled.div`\n  max-width: 1080px;\n  margin: 4em auto 8em;\n  color: ${colors.apricot};\n\n  .row {\n    margin-top: 80px;\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-start;\n    min-width: 100%;\n\n    img {\n      display: block;\n      max-width:680px;\n    }\n  }\n\n`;\n\nexport default Wrapper;\n","import React from \"react\";\nimport Wrapper from \"./Room237Page.style.js\";\nimport colors from \"../../components/colors\";\nimport TitleGraphic from \"../../components/TitleGraphic\"\nimport NavBar from \"../NavBar/NavBar\";\nimport door from \"../../assets/imgs/door.png\"\nimport Quote from \"../../components/Quote\"\n\nconst Room237Page = () => {\n  document.body.style = `background:${colors.red2}`;\n  let contentColor = colors.apricot;\n\n  return (\n    <>\n      <NavBar pageName=\"room237\" color={contentColor} />\n      <Wrapper>\n        <div className=\"container\">\n          <div className=\"title\">\n            <TitleGraphic className=\"graphic\" color={contentColor} />\n            <h2>Room 237</h2>\n          </div>\n          <div className=\"row\">\n            <img src={door}></img>\n            <Quote color={contentColor}>Our guests know their deepest secrets, some of which are, frankly, rather unseemly, will go with us to our graves. </Quote>\n          </div>\n\n        </div>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Room237Page;\n","import styled from \"styled-components\";\nimport colors from \"../../components/colors\";\n\nconst Wrapper = styled.div`\n  max-width: 1080px;\n  margin: 4em auto 8em;\n  color: ${colors.red0};\n\n  .row {\n    margin-top: 80px;\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-start;\n    min-width: 100%;\n\n    img {\n      display: block;\n      max-width:680px;\n    }\n  }\n\n  .row:last-of-type {\n    margin-top: -302px;\n\n    img {\n      margin-left: auto;\n    }\n  }\n\n`;\n\nexport default Wrapper;\n","import React from \"react\";\nimport Wrapper from \"./ElevatorPage.style.js\";\nimport colors from \"../../components/colors\";\nimport elevator from \"../../assets/imgs/elevator.gif\";\nimport blood from \"../../assets/imgs/blood.gif\";\nimport TitleGraphic from \"../../components/TitleGraphic\"\nimport NavBar from \"../NavBar/NavBar\";\nimport Quote from \"../../components/Quote\"\n\nconst ElevatorPage = () => {\n  document.body.style = `background:${colors.pink0}`;\n  let contentColor = colors.red0;\n\n  return (\n    <>\n      <NavBar pageName=\"elevator\" color={contentColor} />\n      <Wrapper>\n\n        <div className=\"container\">\n          <div className=\"title\">\n            <TitleGraphic className=\"graphic\" color={contentColor} />\n            <h2>The Elevator</h2>\n          </div>\n          <div className=\"row\">\n            <img src={elevator}></img>\n            <Quote color={contentColor}>A lot of things happened right here at this particular hotel.</Quote>\n\n          </div>\n          <div className=\"row\"><img src={blood}></img></div>\n          <br></br>\n\n        </div>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default ElevatorPage;\n","import styled from \"styled-components\";\nimport colors from \"../../components/colors\";\n\nconst Wrapper = styled.div`\n  max-width: 1080px;\n  margin: 4em auto 0;\n  color: ${colors.brown};\n\n  .row {\n    margin-top: 80px;\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-start;\n    min-width: 100%;\n\n    img {\n      display: block;\n      max-width:680px;\n    }\n  }\n\n  .row:last-of-type {\n    margin-top: -64px;\n\n    img {\n      margin-left: auto;\n    }\n  }\n\n`;\n\nexport default Wrapper;\n","import React from \"react\";\nimport Wrapper from \"./BathroomPage.style.js\";\nimport colors from \"../../components/colors\";\nimport bathroom from \"../../assets/imgs/bathroom.png\";\nimport bathroom1 from \"../../assets/imgs/bathroom1.png\";\nimport TitleGraphic from \"../../components/TitleGraphic\"\nimport NavBar from \"../NavBar/NavBar\";\nimport Quote from \"../../components/Quote\"\n\nconst BathroomPage = () => {\n  document.body.style = `background:${colors.apricot1}`;\n  let contentColor = colors.brown;\n\n  return (\n    <>\n      <NavBar pageName=\"bathroom\" color={contentColor} />\n      <Wrapper>\n\n        <div className=\"container\">\n          <div className=\"title\">\n            <TitleGraphic className=\"graphic\" color={contentColor} />\n            <h2>The Bathroom</h2>\n          </div>\n          <div className=\"row\">\n            <img src={bathroom}></img>\n            <Quote color={contentColor}>\n              You're looking so well darling, you really are. I don't know what sort of cream they put on you down at the morgue, but I want some.\n            </Quote>\n          </div>\n          <div className=\"row\">\n            <img src={bathroom1}></img>\n          </div>\n          <br></br> <br></br> <br></br> <br></br> <br></br> <br></br>\n        </div>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default BathroomPage;\n","import styled from \"styled-components\";\nimport colors from \"../../components/colors\";\n\nconst Wrapper = styled.div`\n  max-width: 1000px;\n  margin: 4em auto 8em;\n  color: ${colors.red0};\n\n  .row {\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-start;\n    min-width: 100%;\n\n    img {\n      display: block;\n      max-width:680px;\n    }\n  }\n\n  .row:last-of-type {\n    margin-top: -60px;\n\n    img {\n      margin-left: auto;\n    }\n  }\n\n`;\n\nexport default Wrapper;\n","import React from \"react\";\nimport Wrapper from \"./CorridorPage.style.js\";\nimport colors from \"../../components/colors\";\nimport twins from \"../../assets/imgs/twins.png\";\nimport zero from \"../../assets/imgs/zero.png\";\nimport TitleGraphic from \"../../components/TitleGraphic\"\nimport NavBar from \"../NavBar/NavBar\";\nimport Quote from \"../../components/Quote\"\n\nconst CorridorPage = () => {\n  document.body.style = `background:${colors.purple}`;\n  let contentColor = colors.red0;\n\n  return (\n    <>\n      <NavBar pageName=\"corridor\" color={contentColor} />\n      <Wrapper>\n        <div className=\"title\">\n          <TitleGraphic className=\"graphic\" color={contentColor} />\n          <h2>The Corridor</h2>\n        </div>\n        <br></br> <br></br> <br></br>\n        <div className=\"row\">\n          <img src={twins}></img>\n          <Quote color={contentColor}>\n            Come play with us, Danny...\n            </Quote>\n        </div>\n        <div className=\"row\">\n          <img src={zero}></img>\n        </div>\n\n      </Wrapper>\n    </>\n  );\n};\n\nexport default CorridorPage;\n","import styled from \"styled-components\";\nimport colors from \"../../components/colors\";\n\nconst Wrapper = styled.div`\n  max-width: 1080px;\n  margin: 4em auto 8em;\n  color: ${colors.navy};\n\n  .row {\n    display: flex;\n    justify-content: space-around;\n    align-items: flex-start;\n    min-width: 100%;\n\n    img {\n      display: block;\n      max-width:680px;\n    }\n  }\n\n  .row:last-of-type {\n    margin-top: -60px;\n\n    img {\n      margin-left: auto;\n    }\n  }\n\n`;\n\nexport default Wrapper;\n","import React from \"react\";\nimport Wrapper from \"./SnowfieldPage.style.js\";\nimport colors from \"../../components/colors\";\nimport why from \"../../assets/imgs/why.png\";\nimport ded from \"../../assets/imgs/ded.png\";\nimport TitleGraphic from \"../../components/TitleGraphic\"\nimport NavBar from \"../NavBar/NavBar\";\nimport Quote from \"../../components/Quote\"\n\nconst SnowfieldPage = () => {\n  document.body.style = `background:${colors.lavender}`;\n  let contentColor = colors.navy;\n\n  return (\n    <>\n      <NavBar pageName=\"snowfield\" color={contentColor} />\n      <Wrapper>\n\n        <div className=\"title\">\n          <TitleGraphic className=\"graphic\" color={contentColor} />\n          <h2>The Snow Field</h2>\n        </div>\n        <br></br> <br></br> <br></br>\n        <div className=\"row\">\n          <img src={why}></img>\n          <Quote color={contentColor}>Why are we stopping at a barley field?</Quote>\n        </div>\n        <div className=\"row\">\n          <img src={ded}></img>\n\n        </div>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default SnowfieldPage;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport appRoutes from \"./shared/appRoutes\";\nimport NavBar from \"./containers/NavBar/NavBar\";\nimport HomePage from \"./containers/HomePage/HomePage\";\nimport WorkroomPage from \"./containers/WorkroomPage/WorkroomPage\";\nimport Room237Page from \"./containers/Room237Page/Room237Page\";\nimport ElevatorPage from \"./containers/ElevatorPage/ElevatorPage\";\nimport BathroomPage from \"./containers/BathroomPage/BathroomPage\";\nimport CorridorPage from \"./containers/CorridorPage/CorridorPage\";\nimport SnowfieldPage from \"./containers/SnowfieldPage/SnowfieldPage\";\nimport \"./App.css\";\n\nconst app = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"MainContent\">\n        <Switch>\n          <Route exact path={appRoutes.home}>\n            <HomePage />\n          </Route>\n          <Route exact path={appRoutes.workroom}>\n            <WorkroomPage />\n          </Route>\n          <Route exact path={appRoutes.room237}>\n            <Room237Page />\n          </Route>\n          <Route exact path={appRoutes.elevator}>\n            <ElevatorPage />\n          </Route>\n          <Route exact path={appRoutes.bathroom}>\n            <BathroomPage />\n          </Route>\n          <Route exact path={appRoutes.corridor}>\n            <CorridorPage />\n          </Route>\n          <Route exact path={appRoutes.snowfield}>\n            <SnowfieldPage />\n          </Route>\n          <Redirect to={appRoutes.home} />\n        </Switch>\n      </div>\n\n      {/* <Footer /> */}\n    </div>\n  );\n};\n\nexport default app;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ScrollToTop from \"./components/ScrollToTop/ScrollToTop\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst app = (\n  <Router>\n    <ScrollToTop>\n      <App />\n    </ScrollToTop>\n  </Router>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}